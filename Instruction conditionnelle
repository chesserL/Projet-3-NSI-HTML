<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="new 1.css">
    </head>
    <body>
        <h1>I. Type booléen</h1>
        <div id="type_boleen">
            <p>
                Le type booléen (boolean / bool) est un type ayant 2 états possibles : True/False.
                Ce type offre de nombreuses possibilités de programmation, l'une d'elles est la condition.
            </p>  
        </div>

        <div id="operateurs_de_comparaison">
            <h2>II – Opérateurs de comparaison</h2> 
        </div>

        <div>
            <p>
                Les opérateurs de comparaisons permettent de comparer entre eux des objets de tous les types de 
                base. Le résultat d’un test de comparaison produit des valeurs booléennes.
            </p>

            <table border="1">
                <tr>
                    <th>Opérateur</th>
                    <th>Opérateur sous Python</th>
                    <th>Description</th>
                </tr>
                <tr>
                    <td>=</td>
                    <td>==</td>
                    <td>Égal à</td>
                </tr>
                <tr>
                    <td>≠</td>
                    <td>!=</td>
                    <td>Différent de</td>
                </tr>
                <tr>
                    <td>&gt;</td>
                    <td>&gt;</td>
                    <td>Supérieur à</td>
                </tr>
                <tr>
                    <td>≥</td>
                    <td>&gt;=</td>
                    <td>Supérieur ou égal à</td>
                </tr>
                <tr>
                    <td>&lt;</td>
                    <td>&lt;</td>
                    <td>Inférieur à</td>
                </tr>
                <tr>
                    <td>≤</td>
                    <td>&lt;=</td>
                    <td>Inférieur ou égal à</td>
                </tr>
                <tr>
                    <td>∈</td>
                    <td>in</td>
                    <td>Dans</td>
                </tr>
                <tr>
                    <td>∉</td>
                    <td>not in</td>
                    <td>Exclu</td>
                </tr>
            </table>
        </div>

        <div id="instruction_conditionnelle">
            <h3>III. Instruction conditionnelle</h3>
        </div>

        <div>
            <p>
                La condition permet en fonction du résultat de celle-ci d'effectuer une portion de code Python.
                Elle se caractérise par le mot-clé <code>if</code> sous Python.
                <br><br>
                En langage naturel on dirait :
                <br>
                valeur prend la valeur 15<br>
                si valeur vaut 16<br>
                alors on affecte à chaine la chaîne de caractères "La variable valeur vaut 16"
                <br><br>
                En Python, cela nous donne le programme suivant :
                <br><br>
                <code>
                    valeur = 15<br>
                    if valeur == 16:<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;chaine = "La variable valeur vaut 16"
                </code>
                <br><br>
                Complexifions ce bout de code : si valeur ne vaut pas 16, nous voudrions avoir une chaine l'indiquant aussi.
                <br>
                On ajoute alors le mot-clé <code>else</code> qui va prendre tous les autres cas de figure.
                <br><br>
                En langage naturel on dirait :
                <br>
                valeur prend la valeur 15<br>
                si valeur vaut 16<br>
                alors chaine vaut "La variable valeur vaut 16"<br>
                sinon<br>
                chaine vaut "La variable ne vaut pas 16"
                <br><br>
                En Python, cela nous donne le programme suivant :
                <br><br>
                <code>
                    valeur = 15<br>
                    if valeur == 16:<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;chaine = "La variable valeur vaut 16"<br>
                    else:<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;chaine = "La variable ne vaut pas 16"
                </code>
                <br><br>
                Le mot-clé <code>elif</code> permet de donner au programme un comportement encore plus précis, il se traduit par "sinon si".
                Il est placé toujours après un <code>if</code> ou un autre <code>elif</code> et avant le <code>else</code>.
                <br><br>
                En langage naturel on dirait :
                <br>
                valeur prend la valeur 15<br>
                si valeur vaut 16<br>
                alors chaine vaut "La variable valeur vaut 16"<br>
                sinon si valeur est inférieure à 16<br>
                alors chaine vaut "La variable est inférieure à 16"<br>
                sinon<br>
                chaine vaut "La variable ne vaut pas 16"
                <br><br>
                En Python, cela nous donne le programme suivant :
                <br><br>
                <code>
                    valeur = 15<br>
                    if valeur == 16:<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;chaine = "La variable valeur vaut 16"<br>
                    elif valeur &lt; 16:<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;chaine = "La variable est inférieure à 16"<br>
                    else:<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;chaine = "La variable ne vaut pas 16"
                </code>
                <br><br>
                En résumé : les ‘:’ et les espaces sont importants !!!<br>
                <code>
                    if condition:<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;instruction(s)<br>
                    elif condition:<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;instruction(s)<br>
                    else:<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;instruction(s)
                </code>
            </p>
        </div>
    </body>
</html>
